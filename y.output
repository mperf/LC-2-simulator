Terminals which are not used

   COMMENT


Grammar

    0 $accept: program $end

    1 program: orig lines end

    2 end: END EOF

    3 orig: ORIG ADDR

    4 lines: code
    5      | lines code

    6 code: ldst
    7     | imop
    8     | bsop
    9     | ret
   10     | jump
   11     | directive
   12     | jsr
   13     | not
   14     | trap

   15 imop: LABEL IMOP REGISTER COMMA REGISTER COMMA REGISTER
   16     | LABEL IMOP REGISTER COMMA REGISTER COMMA NUMBERS
   17     | LABEL IMOP REGISTER COMMA REGISTER COMMA BINARY
   18     | LABEL IMOP REGISTER COMMA REGISTER COMMA ADDR
   19     | IMOP REGISTER COMMA REGISTER COMMA REGISTER
   20     | IMOP REGISTER COMMA REGISTER COMMA NUMBERS
   21     | IMOP REGISTER COMMA REGISTER COMMA BINARY
   22     | IMOP REGISTER COMMA REGISTER COMMA ADDR

   23 bsop: LABEL BSOP REGISTER COMMA REGISTER COMMA NUMBERS
   24     | BSOP REGISTER COMMA REGISTER COMMA NUMBERS

   25 ldst: LABEL LDST REGISTER COMMA ADDR
   26     | LDST REGISTER COMMA ADDR
   27     | LABEL LDST REGISTER COMMA LABEL
   28     | LDST REGISTER COMMA LABEL

   29 not: LABEL NOT REGISTER COMMA REGISTER
   30    | NOT REGISTER COMMA REGISTER

   31 jump: LABEL JUMP ADDR
   32     | LABEL JUMP LABEL
   33     | JUMP ADDR
   34     | JUMP LABEL

   35 directive: LABEL FILL ADDR
   36          | LABEL FILL NUM
   37          | LABEL FILL BINARY
   38          | LABEL FILL LABEL
   39          | LABEL BLKW NUM
   40          | LABEL STRINGZ STR
   41          | FILL ADDR
   42          | FILL NUM
   43          | FILL BINARY
   44          | BLKW NUM
   45          | STRINGZ STR

   46 trap: LABEL TRAP ADDR
   47     | TRAP ADDR

   48 ret: LABEL RETS
   49    | RETS

   50 jsr: LABEL JSR LABEL
   51    | LABEL JSRR REGISTER COMMA ADDR
   52    | JSR LABEL
   53    | JSRR REGISTER COMMA ADDR


Terminals, with rules where they appear

$end (0) 0
error (256)
REGISTER (258) 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 51 53
RETS (259) 48 49
EOF (260) 2
LDST (261) 25 26 27 28
NOT (262) 29 30
LABEL (263) 15 16 17 18 23 25 27 28 29 31 32 34 35 36 37 38 39 40 46
    48 50 51 52
NUMBERS (264) 16 20 23 24
ORIG (265) 3
COMMENT (266)
JUMP (267) 31 32 33 34
COMMA (268) 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 51 53
ADDR (269) 3 18 22 25 26 31 33 35 41 46 47 51 53
END (270) 2
BLKW (271) 39 44
STRINGZ (272) 40 45
BINARY (273) 17 21 37 43
NUM (274) 36 39 42 44
FILL (275) 35 36 37 38 41 42 43
STR (276) 40 45
JSR (277) 50 52
JSRR (278) 51 53
IMOP (279) 15 16 17 18 19 20 21 22
BSOP (280) 23 24
TRAP (281) 46 47


Nonterminals, with rules where they appear

$accept (27)
    on left: 0
program (28)
    on left: 1, on right: 0
end (29)
    on left: 2, on right: 1
orig (30)
    on left: 3, on right: 1
lines (31)
    on left: 4 5, on right: 1 5
code (32)
    on left: 6 7 8 9 10 11 12 13 14, on right: 4 5
imop (33)
    on left: 15 16 17 18 19 20 21 22, on right: 7
bsop (34)
    on left: 23 24, on right: 8
ldst (35)
    on left: 25 26 27 28, on right: 6
not (36)
    on left: 29 30, on right: 13
jump (37)
    on left: 31 32 33 34, on right: 10
directive (38)
    on left: 35 36 37 38 39 40 41 42 43 44 45, on right: 11
trap (39)
    on left: 46 47, on right: 14
ret (40)
    on left: 48 49, on right: 9
jsr (41)
    on left: 50 51 52 53, on right: 12


state 0

    0 $accept: . program $end

    ORIG  shift, and go to state 1

    program  go to state 2
    orig     go to state 3


state 1

    3 orig: ORIG . ADDR

    ADDR  shift, and go to state 4


state 2

    0 $accept: program . $end

    $end  shift, and go to state 5


state 3

    1 program: orig . lines end

    RETS     shift, and go to state 6
    LDST     shift, and go to state 7
    NOT      shift, and go to state 8
    LABEL    shift, and go to state 9
    JUMP     shift, and go to state 10
    BLKW     shift, and go to state 11
    STRINGZ  shift, and go to state 12
    FILL     shift, and go to state 13
    JSR      shift, and go to state 14
    JSRR     shift, and go to state 15
    IMOP     shift, and go to state 16
    BSOP     shift, and go to state 17
    TRAP     shift, and go to state 18

    lines      go to state 19
    code       go to state 20
    imop       go to state 21
    bsop       go to state 22
    ldst       go to state 23
    not        go to state 24
    jump       go to state 25
    directive  go to state 26
    trap       go to state 27
    ret        go to state 28
    jsr        go to state 29


state 4

    3 orig: ORIG ADDR .

    $default  reduce using rule 3 (orig)


state 5

    0 $accept: program $end .

    $default  accept


state 6

   49 ret: RETS .

    $default  reduce using rule 49 (ret)


state 7

   26 ldst: LDST . REGISTER COMMA ADDR
   28     | LDST . REGISTER COMMA LABEL

    REGISTER  shift, and go to state 30


state 8

   30 not: NOT . REGISTER COMMA REGISTER

    REGISTER  shift, and go to state 31


state 9

   15 imop: LABEL . IMOP REGISTER COMMA REGISTER COMMA REGISTER
   16     | LABEL . IMOP REGISTER COMMA REGISTER COMMA NUMBERS
   17     | LABEL . IMOP REGISTER COMMA REGISTER COMMA BINARY
   18     | LABEL . IMOP REGISTER COMMA REGISTER COMMA ADDR
   23 bsop: LABEL . BSOP REGISTER COMMA REGISTER COMMA NUMBERS
   25 ldst: LABEL . LDST REGISTER COMMA ADDR
   27     | LABEL . LDST REGISTER COMMA LABEL
   29 not: LABEL . NOT REGISTER COMMA REGISTER
   31 jump: LABEL . JUMP ADDR
   32     | LABEL . JUMP LABEL
   35 directive: LABEL . FILL ADDR
   36          | LABEL . FILL NUM
   37          | LABEL . FILL BINARY
   38          | LABEL . FILL LABEL
   39          | LABEL . BLKW NUM
   40          | LABEL . STRINGZ STR
   46 trap: LABEL . TRAP ADDR
   48 ret: LABEL . RETS
   50 jsr: LABEL . JSR LABEL
   51    | LABEL . JSRR REGISTER COMMA ADDR

    RETS     shift, and go to state 32
    LDST     shift, and go to state 33
    NOT      shift, and go to state 34
    JUMP     shift, and go to state 35
    BLKW     shift, and go to state 36
    STRINGZ  shift, and go to state 37
    FILL     shift, and go to state 38
    JSR      shift, and go to state 39
    JSRR     shift, and go to state 40
    IMOP     shift, and go to state 41
    BSOP     shift, and go to state 42
    TRAP     shift, and go to state 43


state 10

   33 jump: JUMP . ADDR
   34     | JUMP . LABEL

    LABEL  shift, and go to state 44
    ADDR   shift, and go to state 45


state 11

   44 directive: BLKW . NUM

    NUM  shift, and go to state 46


state 12

   45 directive: STRINGZ . STR

    STR  shift, and go to state 47


state 13

   41 directive: FILL . ADDR
   42          | FILL . NUM
   43          | FILL . BINARY

    ADDR    shift, and go to state 48
    BINARY  shift, and go to state 49
    NUM     shift, and go to state 50


state 14

   52 jsr: JSR . LABEL

    LABEL  shift, and go to state 51


state 15

   53 jsr: JSRR . REGISTER COMMA ADDR

    REGISTER  shift, and go to state 52


state 16

   19 imop: IMOP . REGISTER COMMA REGISTER COMMA REGISTER
   20     | IMOP . REGISTER COMMA REGISTER COMMA NUMBERS
   21     | IMOP . REGISTER COMMA REGISTER COMMA BINARY
   22     | IMOP . REGISTER COMMA REGISTER COMMA ADDR

    REGISTER  shift, and go to state 53


state 17

   24 bsop: BSOP . REGISTER COMMA REGISTER COMMA NUMBERS

    REGISTER  shift, and go to state 54


state 18

   47 trap: TRAP . ADDR

    ADDR  shift, and go to state 55


state 19

    1 program: orig lines . end
    5 lines: lines . code

    RETS     shift, and go to state 6
    LDST     shift, and go to state 7
    NOT      shift, and go to state 8
    LABEL    shift, and go to state 9
    JUMP     shift, and go to state 10
    END      shift, and go to state 56
    BLKW     shift, and go to state 11
    STRINGZ  shift, and go to state 12
    FILL     shift, and go to state 13
    JSR      shift, and go to state 14
    JSRR     shift, and go to state 15
    IMOP     shift, and go to state 16
    BSOP     shift, and go to state 17
    TRAP     shift, and go to state 18

    end        go to state 57
    code       go to state 58
    imop       go to state 21
    bsop       go to state 22
    ldst       go to state 23
    not        go to state 24
    jump       go to state 25
    directive  go to state 26
    trap       go to state 27
    ret        go to state 28
    jsr        go to state 29


state 20

    4 lines: code .

    $default  reduce using rule 4 (lines)


state 21

    7 code: imop .

    $default  reduce using rule 7 (code)


state 22

    8 code: bsop .

    $default  reduce using rule 8 (code)


state 23

    6 code: ldst .

    $default  reduce using rule 6 (code)


state 24

   13 code: not .

    $default  reduce using rule 13 (code)


state 25

   10 code: jump .

    $default  reduce using rule 10 (code)


state 26

   11 code: directive .

    $default  reduce using rule 11 (code)


state 27

   14 code: trap .

    $default  reduce using rule 14 (code)


state 28

    9 code: ret .

    $default  reduce using rule 9 (code)


state 29

   12 code: jsr .

    $default  reduce using rule 12 (code)


state 30

   26 ldst: LDST REGISTER . COMMA ADDR
   28     | LDST REGISTER . COMMA LABEL

    COMMA  shift, and go to state 59


state 31

   30 not: NOT REGISTER . COMMA REGISTER

    COMMA  shift, and go to state 60


state 32

   48 ret: LABEL RETS .

    $default  reduce using rule 48 (ret)


state 33

   25 ldst: LABEL LDST . REGISTER COMMA ADDR
   27     | LABEL LDST . REGISTER COMMA LABEL

    REGISTER  shift, and go to state 61


state 34

   29 not: LABEL NOT . REGISTER COMMA REGISTER

    REGISTER  shift, and go to state 62


state 35

   31 jump: LABEL JUMP . ADDR
   32     | LABEL JUMP . LABEL

    LABEL  shift, and go to state 63
    ADDR   shift, and go to state 64


state 36

   39 directive: LABEL BLKW . NUM

    NUM  shift, and go to state 65


state 37

   40 directive: LABEL STRINGZ . STR

    STR  shift, and go to state 66


state 38

   35 directive: LABEL FILL . ADDR
   36          | LABEL FILL . NUM
   37          | LABEL FILL . BINARY
   38          | LABEL FILL . LABEL

    LABEL   shift, and go to state 67
    ADDR    shift, and go to state 68
    BINARY  shift, and go to state 69
    NUM     shift, and go to state 70


state 39

   50 jsr: LABEL JSR . LABEL

    LABEL  shift, and go to state 71


state 40

   51 jsr: LABEL JSRR . REGISTER COMMA ADDR

    REGISTER  shift, and go to state 72


state 41

   15 imop: LABEL IMOP . REGISTER COMMA REGISTER COMMA REGISTER
   16     | LABEL IMOP . REGISTER COMMA REGISTER COMMA NUMBERS
   17     | LABEL IMOP . REGISTER COMMA REGISTER COMMA BINARY
   18     | LABEL IMOP . REGISTER COMMA REGISTER COMMA ADDR

    REGISTER  shift, and go to state 73


state 42

   23 bsop: LABEL BSOP . REGISTER COMMA REGISTER COMMA NUMBERS

    REGISTER  shift, and go to state 74


state 43

   46 trap: LABEL TRAP . ADDR

    ADDR  shift, and go to state 75


state 44

   34 jump: JUMP LABEL .

    $default  reduce using rule 34 (jump)


state 45

   33 jump: JUMP ADDR .

    $default  reduce using rule 33 (jump)


state 46

   44 directive: BLKW NUM .

    $default  reduce using rule 44 (directive)


state 47

   45 directive: STRINGZ STR .

    $default  reduce using rule 45 (directive)


state 48

   41 directive: FILL ADDR .

    $default  reduce using rule 41 (directive)


state 49

   43 directive: FILL BINARY .

    $default  reduce using rule 43 (directive)


state 50

   42 directive: FILL NUM .

    $default  reduce using rule 42 (directive)


state 51

   52 jsr: JSR LABEL .

    $default  reduce using rule 52 (jsr)


state 52

   53 jsr: JSRR REGISTER . COMMA ADDR

    COMMA  shift, and go to state 76


state 53

   19 imop: IMOP REGISTER . COMMA REGISTER COMMA REGISTER
   20     | IMOP REGISTER . COMMA REGISTER COMMA NUMBERS
   21     | IMOP REGISTER . COMMA REGISTER COMMA BINARY
   22     | IMOP REGISTER . COMMA REGISTER COMMA ADDR

    COMMA  shift, and go to state 77


state 54

   24 bsop: BSOP REGISTER . COMMA REGISTER COMMA NUMBERS

    COMMA  shift, and go to state 78


state 55

   47 trap: TRAP ADDR .

    $default  reduce using rule 47 (trap)


state 56

    2 end: END . EOF

    EOF  shift, and go to state 79


state 57

    1 program: orig lines end .

    $default  reduce using rule 1 (program)


state 58

    5 lines: lines code .

    $default  reduce using rule 5 (lines)


state 59

   26 ldst: LDST REGISTER COMMA . ADDR
   28     | LDST REGISTER COMMA . LABEL

    LABEL  shift, and go to state 80
    ADDR   shift, and go to state 81


state 60

   30 not: NOT REGISTER COMMA . REGISTER

    REGISTER  shift, and go to state 82


state 61

   25 ldst: LABEL LDST REGISTER . COMMA ADDR
   27     | LABEL LDST REGISTER . COMMA LABEL

    COMMA  shift, and go to state 83


state 62

   29 not: LABEL NOT REGISTER . COMMA REGISTER

    COMMA  shift, and go to state 84


state 63

   32 jump: LABEL JUMP LABEL .

    $default  reduce using rule 32 (jump)


state 64

   31 jump: LABEL JUMP ADDR .

    $default  reduce using rule 31 (jump)


state 65

   39 directive: LABEL BLKW NUM .

    $default  reduce using rule 39 (directive)


state 66

   40 directive: LABEL STRINGZ STR .

    $default  reduce using rule 40 (directive)


state 67

   38 directive: LABEL FILL LABEL .

    $default  reduce using rule 38 (directive)


state 68

   35 directive: LABEL FILL ADDR .

    $default  reduce using rule 35 (directive)


state 69

   37 directive: LABEL FILL BINARY .

    $default  reduce using rule 37 (directive)


state 70

   36 directive: LABEL FILL NUM .

    $default  reduce using rule 36 (directive)


state 71

   50 jsr: LABEL JSR LABEL .

    $default  reduce using rule 50 (jsr)


state 72

   51 jsr: LABEL JSRR REGISTER . COMMA ADDR

    COMMA  shift, and go to state 85


state 73

   15 imop: LABEL IMOP REGISTER . COMMA REGISTER COMMA REGISTER
   16     | LABEL IMOP REGISTER . COMMA REGISTER COMMA NUMBERS
   17     | LABEL IMOP REGISTER . COMMA REGISTER COMMA BINARY
   18     | LABEL IMOP REGISTER . COMMA REGISTER COMMA ADDR

    COMMA  shift, and go to state 86


state 74

   23 bsop: LABEL BSOP REGISTER . COMMA REGISTER COMMA NUMBERS

    COMMA  shift, and go to state 87


state 75

   46 trap: LABEL TRAP ADDR .

    $default  reduce using rule 46 (trap)


state 76

   53 jsr: JSRR REGISTER COMMA . ADDR

    ADDR  shift, and go to state 88


state 77

   19 imop: IMOP REGISTER COMMA . REGISTER COMMA REGISTER
   20     | IMOP REGISTER COMMA . REGISTER COMMA NUMBERS
   21     | IMOP REGISTER COMMA . REGISTER COMMA BINARY
   22     | IMOP REGISTER COMMA . REGISTER COMMA ADDR

    REGISTER  shift, and go to state 89


state 78

   24 bsop: BSOP REGISTER COMMA . REGISTER COMMA NUMBERS

    REGISTER  shift, and go to state 90


state 79

    2 end: END EOF .

    $default  reduce using rule 2 (end)


state 80

   28 ldst: LDST REGISTER COMMA LABEL .

    $default  reduce using rule 28 (ldst)


state 81

   26 ldst: LDST REGISTER COMMA ADDR .

    $default  reduce using rule 26 (ldst)


state 82

   30 not: NOT REGISTER COMMA REGISTER .

    $default  reduce using rule 30 (not)


state 83

   25 ldst: LABEL LDST REGISTER COMMA . ADDR
   27     | LABEL LDST REGISTER COMMA . LABEL

    LABEL  shift, and go to state 91
    ADDR   shift, and go to state 92


state 84

   29 not: LABEL NOT REGISTER COMMA . REGISTER

    REGISTER  shift, and go to state 93


state 85

   51 jsr: LABEL JSRR REGISTER COMMA . ADDR

    ADDR  shift, and go to state 94


state 86

   15 imop: LABEL IMOP REGISTER COMMA . REGISTER COMMA REGISTER
   16     | LABEL IMOP REGISTER COMMA . REGISTER COMMA NUMBERS
   17     | LABEL IMOP REGISTER COMMA . REGISTER COMMA BINARY
   18     | LABEL IMOP REGISTER COMMA . REGISTER COMMA ADDR

    REGISTER  shift, and go to state 95


state 87

   23 bsop: LABEL BSOP REGISTER COMMA . REGISTER COMMA NUMBERS

    REGISTER  shift, and go to state 96


state 88

   53 jsr: JSRR REGISTER COMMA ADDR .

    $default  reduce using rule 53 (jsr)


state 89

   19 imop: IMOP REGISTER COMMA REGISTER . COMMA REGISTER
   20     | IMOP REGISTER COMMA REGISTER . COMMA NUMBERS
   21     | IMOP REGISTER COMMA REGISTER . COMMA BINARY
   22     | IMOP REGISTER COMMA REGISTER . COMMA ADDR

    COMMA  shift, and go to state 97


state 90

   24 bsop: BSOP REGISTER COMMA REGISTER . COMMA NUMBERS

    COMMA  shift, and go to state 98


state 91

   27 ldst: LABEL LDST REGISTER COMMA LABEL .

    $default  reduce using rule 27 (ldst)


state 92

   25 ldst: LABEL LDST REGISTER COMMA ADDR .

    $default  reduce using rule 25 (ldst)


state 93

   29 not: LABEL NOT REGISTER COMMA REGISTER .

    $default  reduce using rule 29 (not)


state 94

   51 jsr: LABEL JSRR REGISTER COMMA ADDR .

    $default  reduce using rule 51 (jsr)


state 95

   15 imop: LABEL IMOP REGISTER COMMA REGISTER . COMMA REGISTER
   16     | LABEL IMOP REGISTER COMMA REGISTER . COMMA NUMBERS
   17     | LABEL IMOP REGISTER COMMA REGISTER . COMMA BINARY
   18     | LABEL IMOP REGISTER COMMA REGISTER . COMMA ADDR

    COMMA  shift, and go to state 99


state 96

   23 bsop: LABEL BSOP REGISTER COMMA REGISTER . COMMA NUMBERS

    COMMA  shift, and go to state 100


state 97

   19 imop: IMOP REGISTER COMMA REGISTER COMMA . REGISTER
   20     | IMOP REGISTER COMMA REGISTER COMMA . NUMBERS
   21     | IMOP REGISTER COMMA REGISTER COMMA . BINARY
   22     | IMOP REGISTER COMMA REGISTER COMMA . ADDR

    REGISTER  shift, and go to state 101
    NUMBERS   shift, and go to state 102
    ADDR      shift, and go to state 103
    BINARY    shift, and go to state 104


state 98

   24 bsop: BSOP REGISTER COMMA REGISTER COMMA . NUMBERS

    NUMBERS  shift, and go to state 105


state 99

   15 imop: LABEL IMOP REGISTER COMMA REGISTER COMMA . REGISTER
   16     | LABEL IMOP REGISTER COMMA REGISTER COMMA . NUMBERS
   17     | LABEL IMOP REGISTER COMMA REGISTER COMMA . BINARY
   18     | LABEL IMOP REGISTER COMMA REGISTER COMMA . ADDR

    REGISTER  shift, and go to state 106
    NUMBERS   shift, and go to state 107
    ADDR      shift, and go to state 108
    BINARY    shift, and go to state 109


state 100

   23 bsop: LABEL BSOP REGISTER COMMA REGISTER COMMA . NUMBERS

    NUMBERS  shift, and go to state 110


state 101

   19 imop: IMOP REGISTER COMMA REGISTER COMMA REGISTER .

    $default  reduce using rule 19 (imop)


state 102

   20 imop: IMOP REGISTER COMMA REGISTER COMMA NUMBERS .

    $default  reduce using rule 20 (imop)


state 103

   22 imop: IMOP REGISTER COMMA REGISTER COMMA ADDR .

    $default  reduce using rule 22 (imop)


state 104

   21 imop: IMOP REGISTER COMMA REGISTER COMMA BINARY .

    $default  reduce using rule 21 (imop)


state 105

   24 bsop: BSOP REGISTER COMMA REGISTER COMMA NUMBERS .

    $default  reduce using rule 24 (bsop)


state 106

   15 imop: LABEL IMOP REGISTER COMMA REGISTER COMMA REGISTER .

    $default  reduce using rule 15 (imop)


state 107

   16 imop: LABEL IMOP REGISTER COMMA REGISTER COMMA NUMBERS .

    $default  reduce using rule 16 (imop)


state 108

   18 imop: LABEL IMOP REGISTER COMMA REGISTER COMMA ADDR .

    $default  reduce using rule 18 (imop)


state 109

   17 imop: LABEL IMOP REGISTER COMMA REGISTER COMMA BINARY .

    $default  reduce using rule 17 (imop)


state 110

   23 bsop: LABEL BSOP REGISTER COMMA REGISTER COMMA NUMBERS .

    $default  reduce using rule 23 (bsop)

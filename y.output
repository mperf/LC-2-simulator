Terminals which are not used

   COMMENT


Grammar

    0 $accept: program $end

    1 program: orig lines end

    2 end: endb EOF

    3 endb: END

    4 @1: /* empty */

    5 orig: ORIG @1 ADDR

    6 lines: code
    7      | lines code

    8 code: ldst
    9     | imop
   10     | bsop
   11     | ret
   12     | jump
   13     | directive
   14     | jsr
   15     | not
   16     | trap
   17     | codeb ldst
   18     | codeb imop
   19     | codeb bsop
   20     | codeb ret
   21     | codeb jump
   22     | codeb directive
   23     | codeb jsr
   24     | codeb not
   25     | codeb trap

   26 codeb: LABEL

   27 imop: imopb COMMA REGISTER
   28     | imopb COMMA NUMBERS
   29     | imopb COMMA BINARY
   30     | imopb COMMA ADDR

   31 @2: /* empty */

   32 @3: /* empty */

   33 imopb: IMOP @2 REGISTER @3 COMMA REGISTER

   34 @4: /* empty */

   35 @5: /* empty */

   36 @6: /* empty */

   37 bsop: BSOP @4 REGISTER @5 COMMA REGISTER @6 COMMA NUMBERS

   38 ldst: ldstb COMMA ADDR
   39     | ldstb COMMA LABEL

   40 @7: /* empty */

   41 ldstb: LDST @7 REGISTER

   42 @8: /* empty */

   43 @9: /* empty */

   44 not: NOT @8 REGISTER @9 COMMA REGISTER

   45 jump: jumpb ADDR
   46     | jumpb LABEL

   47 jumpb: JUMP

   48 directive: dirb ADDR
   49          | dirb NUM
   50          | dirb BINARY
   51          | dirb LABEL

   52 @10: /* empty */

   53 directive: BLKW @10 NUM

   54 @11: /* empty */

   55 directive: STRINGZ @11 STR

   56 dirb: FILL

   57 @12: /* empty */

   58 trap: TRAP @12 ADDR

   59 ret: RETS

   60 @13: /* empty */

   61 jsr: JSR @13 LABEL

   62 @14: /* empty */

   63 @15: /* empty */

   64 jsr: JSRR @14 REGISTER @15 COMMA ADDR


Terminals, with rules where they appear

$end (0) 0
error (256)
REGISTER (258) 27 33 37 41 44 64
RETS (259) 59
EOF (260) 2
LDST (261) 41
NOT (262) 44
LABEL (263) 26 39 46 51 61
NUMBERS (264) 28 37
ORIG (265) 5
COMMENT (266)
JUMP (267) 47
COMMA (268) 27 28 29 30 33 37 38 39 44 64
ADDR (269) 5 30 38 45 48 58 64
END (270) 3
BLKW (271) 53
STRINGZ (272) 55
BINARY (273) 29 50
NUM (274) 49 53
FILL (275) 56
STR (276) 55
JSR (277) 61
JSRR (278) 64
IMOP (279) 33
BSOP (280) 37
TRAP (281) 58


Nonterminals, with rules where they appear

$accept (27)
    on left: 0
program (28)
    on left: 1, on right: 0
end (29)
    on left: 2, on right: 1
endb (30)
    on left: 3, on right: 2
orig (31)
    on left: 5, on right: 1
@1 (32)
    on left: 4, on right: 5
lines (33)
    on left: 6 7, on right: 1 7
code (34)
    on left: 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25,
    on right: 6 7
codeb (35)
    on left: 26, on right: 17 18 19 20 21 22 23 24 25
imop (36)
    on left: 27 28 29 30, on right: 9 18
imopb (37)
    on left: 33, on right: 27 28 29 30
@2 (38)
    on left: 31, on right: 33
@3 (39)
    on left: 32, on right: 33
bsop (40)
    on left: 37, on right: 10 19
@4 (41)
    on left: 34, on right: 37
@5 (42)
    on left: 35, on right: 37
@6 (43)
    on left: 36, on right: 37
ldst (44)
    on left: 38 39, on right: 8 17
ldstb (45)
    on left: 41, on right: 38 39
@7 (46)
    on left: 40, on right: 41
not (47)
    on left: 44, on right: 15 24
@8 (48)
    on left: 42, on right: 44
@9 (49)
    on left: 43, on right: 44
jump (50)
    on left: 45 46, on right: 12 21
jumpb (51)
    on left: 47, on right: 45 46
directive (52)
    on left: 48 49 50 51 53 55, on right: 13 22
@10 (53)
    on left: 52, on right: 53
@11 (54)
    on left: 54, on right: 55
dirb (55)
    on left: 56, on right: 48 49 50 51
trap (56)
    on left: 58, on right: 16 25
@12 (57)
    on left: 57, on right: 58
ret (58)
    on left: 59, on right: 11 20
jsr (59)
    on left: 61 64, on right: 14 23
@13 (60)
    on left: 60, on right: 61
@14 (61)
    on left: 62, on right: 64
@15 (62)
    on left: 63, on right: 64


state 0

    0 $accept: . program $end

    ORIG  shift, and go to state 1

    program  go to state 2
    orig     go to state 3


state 1

    5 orig: ORIG . @1 ADDR

    $default  reduce using rule 4 (@1)

    @1  go to state 4


state 2

    0 $accept: program . $end

    $end  shift, and go to state 5


state 3

    1 program: orig . lines end

    RETS     shift, and go to state 6
    LDST     shift, and go to state 7
    NOT      shift, and go to state 8
    LABEL    shift, and go to state 9
    JUMP     shift, and go to state 10
    BLKW     shift, and go to state 11
    STRINGZ  shift, and go to state 12
    FILL     shift, and go to state 13
    JSR      shift, and go to state 14
    JSRR     shift, and go to state 15
    IMOP     shift, and go to state 16
    BSOP     shift, and go to state 17
    TRAP     shift, and go to state 18

    lines      go to state 19
    code       go to state 20
    codeb      go to state 21
    imop       go to state 22
    imopb      go to state 23
    bsop       go to state 24
    ldst       go to state 25
    ldstb      go to state 26
    not        go to state 27
    jump       go to state 28
    jumpb      go to state 29
    directive  go to state 30
    dirb       go to state 31
    trap       go to state 32
    ret        go to state 33
    jsr        go to state 34


state 4

    5 orig: ORIG @1 . ADDR

    ADDR  shift, and go to state 35


state 5

    0 $accept: program $end .

    $default  accept


state 6

   59 ret: RETS .

    $default  reduce using rule 59 (ret)


state 7

   41 ldstb: LDST . @7 REGISTER

    $default  reduce using rule 40 (@7)

    @7  go to state 36


state 8

   44 not: NOT . @8 REGISTER @9 COMMA REGISTER

    $default  reduce using rule 42 (@8)

    @8  go to state 37


state 9

   26 codeb: LABEL .

    $default  reduce using rule 26 (codeb)


state 10

   47 jumpb: JUMP .

    $default  reduce using rule 47 (jumpb)


state 11

   53 directive: BLKW . @10 NUM

    $default  reduce using rule 52 (@10)

    @10  go to state 38


state 12

   55 directive: STRINGZ . @11 STR

    $default  reduce using rule 54 (@11)

    @11  go to state 39


state 13

   56 dirb: FILL .

    $default  reduce using rule 56 (dirb)


state 14

   61 jsr: JSR . @13 LABEL

    $default  reduce using rule 60 (@13)

    @13  go to state 40


state 15

   64 jsr: JSRR . @14 REGISTER @15 COMMA ADDR

    $default  reduce using rule 62 (@14)

    @14  go to state 41


state 16

   33 imopb: IMOP . @2 REGISTER @3 COMMA REGISTER

    $default  reduce using rule 31 (@2)

    @2  go to state 42


state 17

   37 bsop: BSOP . @4 REGISTER @5 COMMA REGISTER @6 COMMA NUMBERS

    $default  reduce using rule 34 (@4)

    @4  go to state 43


state 18

   58 trap: TRAP . @12 ADDR

    $default  reduce using rule 57 (@12)

    @12  go to state 44


state 19

    1 program: orig lines . end
    7 lines: lines . code

    RETS     shift, and go to state 6
    LDST     shift, and go to state 7
    NOT      shift, and go to state 8
    LABEL    shift, and go to state 9
    JUMP     shift, and go to state 10
    END      shift, and go to state 45
    BLKW     shift, and go to state 11
    STRINGZ  shift, and go to state 12
    FILL     shift, and go to state 13
    JSR      shift, and go to state 14
    JSRR     shift, and go to state 15
    IMOP     shift, and go to state 16
    BSOP     shift, and go to state 17
    TRAP     shift, and go to state 18

    end        go to state 46
    endb       go to state 47
    code       go to state 48
    codeb      go to state 21
    imop       go to state 22
    imopb      go to state 23
    bsop       go to state 24
    ldst       go to state 25
    ldstb      go to state 26
    not        go to state 27
    jump       go to state 28
    jumpb      go to state 29
    directive  go to state 30
    dirb       go to state 31
    trap       go to state 32
    ret        go to state 33
    jsr        go to state 34


state 20

    6 lines: code .

    $default  reduce using rule 6 (lines)


state 21

   17 code: codeb . ldst
   18     | codeb . imop
   19     | codeb . bsop
   20     | codeb . ret
   21     | codeb . jump
   22     | codeb . directive
   23     | codeb . jsr
   24     | codeb . not
   25     | codeb . trap

    RETS     shift, and go to state 6
    LDST     shift, and go to state 7
    NOT      shift, and go to state 8
    JUMP     shift, and go to state 10
    BLKW     shift, and go to state 11
    STRINGZ  shift, and go to state 12
    FILL     shift, and go to state 13
    JSR      shift, and go to state 14
    JSRR     shift, and go to state 15
    IMOP     shift, and go to state 16
    BSOP     shift, and go to state 17
    TRAP     shift, and go to state 18

    imop       go to state 49
    imopb      go to state 23
    bsop       go to state 50
    ldst       go to state 51
    ldstb      go to state 26
    not        go to state 52
    jump       go to state 53
    jumpb      go to state 29
    directive  go to state 54
    dirb       go to state 31
    trap       go to state 55
    ret        go to state 56
    jsr        go to state 57


state 22

    9 code: imop .

    $default  reduce using rule 9 (code)


state 23

   27 imop: imopb . COMMA REGISTER
   28     | imopb . COMMA NUMBERS
   29     | imopb . COMMA BINARY
   30     | imopb . COMMA ADDR

    COMMA  shift, and go to state 58


state 24

   10 code: bsop .

    $default  reduce using rule 10 (code)


state 25

    8 code: ldst .

    $default  reduce using rule 8 (code)


state 26

   38 ldst: ldstb . COMMA ADDR
   39     | ldstb . COMMA LABEL

    COMMA  shift, and go to state 59


state 27

   15 code: not .

    $default  reduce using rule 15 (code)


state 28

   12 code: jump .

    $default  reduce using rule 12 (code)


state 29

   45 jump: jumpb . ADDR
   46     | jumpb . LABEL

    LABEL  shift, and go to state 60
    ADDR   shift, and go to state 61


state 30

   13 code: directive .

    $default  reduce using rule 13 (code)


state 31

   48 directive: dirb . ADDR
   49          | dirb . NUM
   50          | dirb . BINARY
   51          | dirb . LABEL

    LABEL   shift, and go to state 62
    ADDR    shift, and go to state 63
    BINARY  shift, and go to state 64
    NUM     shift, and go to state 65


state 32

   16 code: trap .

    $default  reduce using rule 16 (code)


state 33

   11 code: ret .

    $default  reduce using rule 11 (code)


state 34

   14 code: jsr .

    $default  reduce using rule 14 (code)


state 35

    5 orig: ORIG @1 ADDR .

    $default  reduce using rule 5 (orig)


state 36

   41 ldstb: LDST @7 . REGISTER

    REGISTER  shift, and go to state 66


state 37

   44 not: NOT @8 . REGISTER @9 COMMA REGISTER

    REGISTER  shift, and go to state 67


state 38

   53 directive: BLKW @10 . NUM

    NUM  shift, and go to state 68


state 39

   55 directive: STRINGZ @11 . STR

    STR  shift, and go to state 69


state 40

   61 jsr: JSR @13 . LABEL

    LABEL  shift, and go to state 70


state 41

   64 jsr: JSRR @14 . REGISTER @15 COMMA ADDR

    REGISTER  shift, and go to state 71


state 42

   33 imopb: IMOP @2 . REGISTER @3 COMMA REGISTER

    REGISTER  shift, and go to state 72


state 43

   37 bsop: BSOP @4 . REGISTER @5 COMMA REGISTER @6 COMMA NUMBERS

    REGISTER  shift, and go to state 73


state 44

   58 trap: TRAP @12 . ADDR

    ADDR  shift, and go to state 74


state 45

    3 endb: END .

    $default  reduce using rule 3 (endb)


state 46

    1 program: orig lines end .

    $default  reduce using rule 1 (program)


state 47

    2 end: endb . EOF

    EOF  shift, and go to state 75


state 48

    7 lines: lines code .

    $default  reduce using rule 7 (lines)


state 49

   18 code: codeb imop .

    $default  reduce using rule 18 (code)


state 50

   19 code: codeb bsop .

    $default  reduce using rule 19 (code)


state 51

   17 code: codeb ldst .

    $default  reduce using rule 17 (code)


state 52

   24 code: codeb not .

    $default  reduce using rule 24 (code)


state 53

   21 code: codeb jump .

    $default  reduce using rule 21 (code)


state 54

   22 code: codeb directive .

    $default  reduce using rule 22 (code)


state 55

   25 code: codeb trap .

    $default  reduce using rule 25 (code)


state 56

   20 code: codeb ret .

    $default  reduce using rule 20 (code)


state 57

   23 code: codeb jsr .

    $default  reduce using rule 23 (code)


state 58

   27 imop: imopb COMMA . REGISTER
   28     | imopb COMMA . NUMBERS
   29     | imopb COMMA . BINARY
   30     | imopb COMMA . ADDR

    REGISTER  shift, and go to state 76
    NUMBERS   shift, and go to state 77
    ADDR      shift, and go to state 78
    BINARY    shift, and go to state 79


state 59

   38 ldst: ldstb COMMA . ADDR
   39     | ldstb COMMA . LABEL

    LABEL  shift, and go to state 80
    ADDR   shift, and go to state 81


state 60

   46 jump: jumpb LABEL .

    $default  reduce using rule 46 (jump)


state 61

   45 jump: jumpb ADDR .

    $default  reduce using rule 45 (jump)


state 62

   51 directive: dirb LABEL .

    $default  reduce using rule 51 (directive)


state 63

   48 directive: dirb ADDR .

    $default  reduce using rule 48 (directive)


state 64

   50 directive: dirb BINARY .

    $default  reduce using rule 50 (directive)


state 65

   49 directive: dirb NUM .

    $default  reduce using rule 49 (directive)


state 66

   41 ldstb: LDST @7 REGISTER .

    $default  reduce using rule 41 (ldstb)


state 67

   44 not: NOT @8 REGISTER . @9 COMMA REGISTER

    $default  reduce using rule 43 (@9)

    @9  go to state 82


state 68

   53 directive: BLKW @10 NUM .

    $default  reduce using rule 53 (directive)


state 69

   55 directive: STRINGZ @11 STR .

    $default  reduce using rule 55 (directive)


state 70

   61 jsr: JSR @13 LABEL .

    $default  reduce using rule 61 (jsr)


state 71

   64 jsr: JSRR @14 REGISTER . @15 COMMA ADDR

    $default  reduce using rule 63 (@15)

    @15  go to state 83


state 72

   33 imopb: IMOP @2 REGISTER . @3 COMMA REGISTER

    $default  reduce using rule 32 (@3)

    @3  go to state 84


state 73

   37 bsop: BSOP @4 REGISTER . @5 COMMA REGISTER @6 COMMA NUMBERS

    $default  reduce using rule 35 (@5)

    @5  go to state 85


state 74

   58 trap: TRAP @12 ADDR .

    $default  reduce using rule 58 (trap)


state 75

    2 end: endb EOF .

    $default  reduce using rule 2 (end)


state 76

   27 imop: imopb COMMA REGISTER .

    $default  reduce using rule 27 (imop)


state 77

   28 imop: imopb COMMA NUMBERS .

    $default  reduce using rule 28 (imop)


state 78

   30 imop: imopb COMMA ADDR .

    $default  reduce using rule 30 (imop)


state 79

   29 imop: imopb COMMA BINARY .

    $default  reduce using rule 29 (imop)


state 80

   39 ldst: ldstb COMMA LABEL .

    $default  reduce using rule 39 (ldst)


state 81

   38 ldst: ldstb COMMA ADDR .

    $default  reduce using rule 38 (ldst)


state 82

   44 not: NOT @8 REGISTER @9 . COMMA REGISTER

    COMMA  shift, and go to state 86


state 83

   64 jsr: JSRR @14 REGISTER @15 . COMMA ADDR

    COMMA  shift, and go to state 87


state 84

   33 imopb: IMOP @2 REGISTER @3 . COMMA REGISTER

    COMMA  shift, and go to state 88


state 85

   37 bsop: BSOP @4 REGISTER @5 . COMMA REGISTER @6 COMMA NUMBERS

    COMMA  shift, and go to state 89


state 86

   44 not: NOT @8 REGISTER @9 COMMA . REGISTER

    REGISTER  shift, and go to state 90


state 87

   64 jsr: JSRR @14 REGISTER @15 COMMA . ADDR

    ADDR  shift, and go to state 91


state 88

   33 imopb: IMOP @2 REGISTER @3 COMMA . REGISTER

    REGISTER  shift, and go to state 92


state 89

   37 bsop: BSOP @4 REGISTER @5 COMMA . REGISTER @6 COMMA NUMBERS

    REGISTER  shift, and go to state 93


state 90

   44 not: NOT @8 REGISTER @9 COMMA REGISTER .

    $default  reduce using rule 44 (not)


state 91

   64 jsr: JSRR @14 REGISTER @15 COMMA ADDR .

    $default  reduce using rule 64 (jsr)


state 92

   33 imopb: IMOP @2 REGISTER @3 COMMA REGISTER .

    $default  reduce using rule 33 (imopb)


state 93

   37 bsop: BSOP @4 REGISTER @5 COMMA REGISTER . @6 COMMA NUMBERS

    $default  reduce using rule 36 (@6)

    @6  go to state 94


state 94

   37 bsop: BSOP @4 REGISTER @5 COMMA REGISTER @6 . COMMA NUMBERS

    COMMA  shift, and go to state 95


state 95

   37 bsop: BSOP @4 REGISTER @5 COMMA REGISTER @6 COMMA . NUMBERS

    NUMBERS  shift, and go to state 96


state 96

   37 bsop: BSOP @4 REGISTER @5 COMMA REGISTER @6 COMMA NUMBERS .

    $default  reduce using rule 37 (bsop)
